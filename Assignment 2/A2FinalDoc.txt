//ASSIGNMENT 2
//MICHAEL LENEHAN
//15410402

//Question 1
#include <iostream>

using namespace std;

void square(double &d)
{
    d=(d*d);
}

int main()
{
    double s = 9;
    cout << "s = "<< s << endl;
    square(s);
    cout << "s squared = " << s << endl;
    return 0;
}

//Question 2
#include <iostream>

using namespace std;

int countOdd(int a[], int j)
{
    int i = 0, n;
    for(n=0;n<j;n++){
    if(a[n]%2==1)
        {
            i=i+1;
        }
    }
    return i;
}
int main()
{
    int a[] = {4, 6, 8, 7, 9, 5, 11}, n = 7;
    cout<< countOdd(a, n);
    return 0;
}

//Question 3
#include <iostream>

using namespace std;

bool find(int val, int arr[], int size){
    int i;
    std::cout << std::boolalpha;
    for(i=0;i<size;i++){
        if(arr[i]==val)
            return true;
    }
}

int main()
{
    int a[] = {3, 6, 8, 33}, x = 8, size = 4;
    cout << find(x, a, size);
    return 0;
}

//Question 4
#include <iostream>

using namespace std;

int main(int argc, char *argv[])
{
    int i;
    for(i=6; i>0; i--){
    cout << argv[i] << endl;
    }
    return 0;
}

//Question 5
#include <iostream>

using namespace std;

double average(double data[], int size)
{
    int i;
    double sum, average;
    for(i=0;i<size;i++){
        sum = sum + data[i];
    }
    return (average = sum/size);
}
int main()
{
    double data[] = {1,2,3,4,5,6,7,8},size = 8;
    cout << average(data, size);
    return 0;
}

//Question 6
#include <iostream>

using namespace std;

double average(double data[], int size)
{
    int i;
    double sum, average;
    for(i=0;i<size;i++){
        sum = sum + data[i];
    }
    return (average = sum/size);
}
int main()
{
    double data[] = {1,2,3,4,5,6,7,8},size = 8;
    cout << average(data, size);
    return 0;
}
 //Question 7
 #include <iostream>
 
 using namespace std;
 
 double average(double data[], int size)
 {
     int i;
     double sum, average;
     for(i=0;i<size;i++){
         sum = sum + data[i];
     }
     return (average = sum/size);
 }
 int main()
 {
     double data[] = {1,2,3,4,5,6,7,8},size = 8;
     cout << average(data, size);
     return 0;
 }

//Question 8
#include <iostream>

using namespace std;

class Rectangle{

private:

    double length;
    double width;

public:

    Rectangle(double, double);
    double area(double, double);
    void info(double, double);
    bool congruent(Rectangle r);
};

Rectangle::Rectangle(double l, double w){
    length = l;
    width = w;
}

double Rectangle:: area(double length, double width){
    double area = length*width;
    return area;
}

void Rectangle::info(double length, double width){
    int t;
    cout << "Length is " << length << endl;
    cout << "Width is " << width << endl;
    cout << "Area is " << length*width << endl;

}

bool Rectangle::congruent(Rectangle r){
    if(r.length==length&&r.width==width) return true;
    else return false;
}
int main()
{
    Rectangle r1(8.9, 12.5);  // make a rectangle

    Rectangle r2(8.9, 12.5);  // make another

    r1.info(8.9,12.5); r2.info(8.9,12.5);

    if (r1.congruent(r2))  cout << "Congruent" << endl;

    else  cout << "Not Congruent" << endl;
}

//Question 9
#include <iostream>
#include <cstring>
#include <string>
#include <cstdlib>

using namespace std;

class Chatbot{

private:
    string name;

public:
    Chatbot(string);
    string respondTo(string);
    string getName(string);
};

Chatbot::Chatbot(string n){
    name = n;
    cout << n << endl;
}

string Chatbot::respondTo(string s){
    int i, j;
    string restoq[] = {"That's interesting, tell me more", "Why do you think that is?", "Just go away", "I'm not inerested in talking about this topic", "You must be really smart"}, restos[] = { "Who are you?",  "Why are you annoying me?", "Can we talk about something else?" , "What do you want?", "What type of music do you like?"}, q = "?";
    std::size_t found = s.find(q);
    if(found == std::string::npos){
        i = rand() % 5;
        while(i==j){
            i = rand() % 5;
        }
        j=i;
        return restos[i];
    }
    else{
        i = rand() % 5;
        while(i==j){
            i = rand() % 5;
        }
        j=i;
        return restoq[i];
    }
}

string Chatbot::getName(string u){
    cout << "Hello " << u << endl;
    return u;
}
int main()
{
    string name, in;
    Chatbot bot1("Bob");
    cout << "Enter Your Name: ";
    std::getline(std::cin, name);
    bot1.getName(name);
    cout << "Begin Conversing" << endl;
    while(in != "EXIT"){
        std::getline(std::cin, in);
        cout << bot1.respondTo(in) << endl;
    }
    return 0;
}

//Question 10
#include <iostream>
#include <cstring>
#include <string>
#include <cstdlib>

using namespace std;

class Chatbot{

private:
    string name;

public:
    Chatbot(string);
    string respondTo(string);
    string getName(string);
    string botName();
};

Chatbot::Chatbot(string n){
    name = n;
    cout << n << endl;
}

string Chatbot::respondTo(string s){
    int i, j;
    string restoq[] = {"That's interesting, tell me more", "Why do you think that is?", "Just go away", "I'm not inerested in talking about this topic", "You must be really smart"}, restos[] = { "Who are you?",  "Why are you annoying me?", "Can we talk about something else?" , "What do you want?", "What type of music do you like?"}, q = "?";
    std::size_t found = s.find(q);
    if(found == std::string::npos){
        i = rand() % 5;
        while(i==j){
            i = rand() % 5;
        }
        j=i;
        return restos[i];
    }
    else{
        i = rand() % 5;
        while(i==j){
            i = rand() % 5;
        }
        j=i;
        return restoq[i];
    }
}

string Chatbot::getName(string u){
    cout << "Hello " << u << endl;
    return u;
}

string Chatbot::botName(){
    return name;
}

int main()
{
    int i = 0;
    string name, in1, in2, start = "Begin conversing";
    Chatbot bot1("Bob"), bot2("Bill");
    cout << "Enter Your Name: " << endl;
    cout << bot1.botName() << ":    " << bot1.botName() << endl;
    cout << start << endl;
    start = in1;
    while(i<10){
        in2 = bot2.respondTo(in1);
        cout << bot2.botName() << ": " << bot2.respondTo(in2) << endl;
        in1 = bot1.respondTo(in2);
        cout << bot1.botName() << ": " << bot1.respondTo(in1) << endl;
        i++;
    }
    return 0;
}
